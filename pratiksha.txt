Multiple Choice Questions (MCQs)
Which of the following is true about I2C communication?
a) It is a half-duplex communication protocol.
b) It requires separate data and clock lines.
c) It can support multiple masters and slaves.
d) All of the above.

ans:d

What is the typical data transfer rate of a standard I2C bus?
a) 100 kbps
b) 10 Mbps
c) 400 Mbps
d) 1 Gbps

ans:10 Mbps

In UART communication, what does the parity bit do?
a) Indicates the start of communication
b) Ensures data integrity by error checking
c) Defines the baud rate
d) Synchronizes the clock signal

ans:b

Which of the following is a characteristic of SPI communication?
a) It is a synchronous communication protocol.
b) It uses start and stop bits for data transmission.
c) It allows only one slave device to connect.
d) It does not require a clock signal.

ans:a

What is the main advantage of using SPI over I2C?
a) Lower pin count
b) Faster data transfer speed
c) Built-in error checking
d) Multi-master support

ans:c


What is the primary purpose of using C++ in embedded systems?
a) To reduce code size
b) To enable object-oriented programming features
c) To increase hardware performance
d) To replace RTOS functionality

ans:b

Which C++ feature is most commonly used for hardware abstraction in embedded systems?
a) Templates
b) Classes and Inheritance
c) Pointers
d) Lambda functions

ans:pointers


cpp question:

Constructor and Destructor
Question:
Write a class Rectangle that contains:

Private attributes length and width.
A parameterized constructor to initialize these attributes.
A destructor to print a message when the object is destroyed.
Write a member function to calculate and return the area of the rectangle. 
Demonstrate the functionality by creating an object and calculating its area. 


class Rectangle{
   private:
      int length;
      int width;
  public:
 Rectangle(int length,int width)
{
    this.length=length;
    this.width=width;

}
int area()
{
return length*width;
}

 ~Rectangle()
{
     cout<<"object destroyed";
}
};

int main()
{
  Rectangle r(10,20);
  cout<<r.area();
  

}





Inheritance
Question:
Create a base class Employee with:

Attributes: name (string) and id (int).
A member function display() to print these details.
Derive a class Manager that has an additional attribute department (string).
 Override the display() function to include the department in the output. 
Create objects of both classes and call their respective display() functions.




#include <iostream>
#include <string>
using namespace std;

class Employee {
public:
    string name;
    int id;

public:
    Employee(string empName, int empId) : name(empName), id(empId) {}

    virtual void display()  {
        cout << "Employee Name: " << name << endl;
        cout << "Employee ID: " << id << endl;
    }
};

class Manager : public Employee {
public:
    string department;

public:
    Manager(string empName, int empId, string dept) : Employee(empName, empId), department(dept) {}

    void display() {
        Employee::display();
        cout << "Department: " << department << endl;
    }
};

int main() {
    Employee emp("Pratiksha", 10);
    cout << "Employee:" << endl;
    emp.display();
    cout << endl;

    Manager mgr("Pallavi", 100, "HR");
    cout << "Manager Details:" << endl;
    mgr.display();

    return 0;
}